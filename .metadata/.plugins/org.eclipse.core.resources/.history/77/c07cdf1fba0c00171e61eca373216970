package visitor;

import ast.Programa;
import ast.definiciones.*;
import ast.expresiones.*;
import ast.sentencias.*;
import ast.tipos.CampoRegistro;
import ast.tipos.TipoArray;
import ast.tipos.TipoCaracter;
import ast.tipos.TipoEntero;
import ast.tipos.TipoFuncion;
import ast.tipos.TipoReal;
import ast.tipos.TipoRegistro;
import ast.tipos.TipoVoid;

public interface Visitor {
	public Object visit(Programa programa);

	public Object visit(DefVariable defVariable);

	public Object visit(DefFuncion defFuncion);

	public Object visit(AccesoArray accesoArray, Object o);

	public Object visit(AccesoCampo accesoCampo, Object o);

	public Object visit(Aritmetica aritmetica, Object o);

	public Object visit(Cast cast, Object o);

	public Object visit(Comparacion comparacion, Object o);

	public Object visit(LiteralCaracter literalCaracter, Object o);

	public Object visit(LiteralEntero literalEntero, Object o);

	public Object visit(LiteralReal literalReal, Object o);

	public Object visit(Logica logica, Object o);

	public Object visit(MenosUnario menosUnario, Object o);

	public Object visit(Negacion negacion, Object o);

	public Object visit(Variable variable, Object o);

	public Object visit(Asignacion asignacion, Object o);

	public Object visit(Escritura escritura, Object o);

	public Object visit(Invocacion invocacion, Object o);

	public Object visit(Lectura lectura, Object o);

	public Object visit(Return return1, Object o);

	public Object visit(SentenciaIf if1, Object o);

	public Object visit(SentenciaWhile sentenciaWhile, Object o);
}
