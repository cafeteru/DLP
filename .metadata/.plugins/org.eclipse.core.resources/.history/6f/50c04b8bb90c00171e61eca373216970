package visitor;

import ast.Programa;
import ast.definiciones.*;
import ast.expresiones.*;
import ast.sentencias.*;
import ast.tipos.*;

public class VisitorComprobacionTipos implements Visitor {

	@Override
	public Object visit(Programa programa) {
		for (Definicion d : programa.getDefiniciones())
			d.accept(this);
		return null;
	}

	@Override
	public Object visit(DefVariable defVariable) {
		// TODO Auto-generated method stub
		defVariable.accept(this);
		return null;
	}

	@Override
	public Object visit(DefFuncion defFuncion) {
		// TODO Auto-generated method stub
		defFuncion.accept(this);
		return null;
	}

	@Override
	public Object visit(AccesoArray accesoArray, Object o) {
		accesoArray.setLValue(true);
		return null;
	}

	@Override
	public Object visit(AccesoCampo accesoCampo, Object o) {
		accesoCampo.setLValue(true);
		return null;
	}

	@Override
	public Object visit(Aritmetica aritmetica, Object o) {
		aritmetica.setLValue(false);
		return null;
	}

	@Override
	public Object visit(Cast cast, Object o) {
		cast.setLValue(false);
		return null;
	}

	@Override
	public Object visit(Comparacion comparacion, Object o) {
		comparacion.setLValue(false);
		return null;
	}

	@Override
	public Object visit(LiteralCaracter literalCaracter, Object o) {
		literalCaracter.setLValue(false);
		return null;
	}

	@Override
	public Object visit(LiteralEntero literalEntero, Object o) {
		literalEntero.setLValue(false);
		return null;
	}

	@Override
	public Object visit(LiteralReal literalReal, Object o) {
		literalReal.setLValue(false);
		return null;
	}

	@Override
	public Object visit(Logica logica, Object o) {
		logica.setLValue(false);
		return null;
	}

	@Override
	public Object visit(MenosUnario menosUnario, Object o) {
		menosUnario.setLValue(false);
		return null;
	}

	@Override
	public Object visit(Negacion negacion, Object o) {
		negacion.setLValue(false);
		return null;
	}

	@Override
	public Object visit(Variable variable, Object o) {
		variable.setLValue(true);
		return null;
	}

	@Override
	public Object visit(Asignacion asignacion, Object o) {
		asignacion.getVariable().accept(this, o);
		asignacion.getValor().accept(this, o);
		if (!asignacion.getVariable().getLValue())
			new TipoError(asignacion, "Se esperaba LValue");
		return null;
	}

	@Override
	public Object visit(Escritura escritura, Object o) {
		for (Expresion e : escritura.getExpresiones())
			e.accept(this, o);
		return null;
	}

	@Override
	public Object visit(Invocacion invocacion, Object o) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object visit(Lectura lectura, Object o) {
		for (Expresion e : lectura.getExpresiones())
			e.accept(this, o);
		return null;
	}

	@Override
	public Object visit(Return return1, Object o) {
		return1.getExpresion().accept(this, o);
		return null;
	}

	@Override
	public Object visit(SentenciaIf if1, Object o) {
		if1.getCondicion().accept(this, o);
		for (Sentencia e : if1.getCuerpoIf())
			e.visit(this, o);
		for (Sentencia e : if1.getCuerpoElse())
			e.visit(this, o);
		return null;
	}

	@Override
	public Object visit(SentenciaWhile sentenciaWhile, Object o) {
		sentenciaWhile.getCondicion().accept(this, o);
		for (Sentencia e : sentenciaWhile.getSentencias())
			e.visit(this, o);
		return null;
	}

	@Override
	public Object visit(CampoRegistro campoRegistro) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object visit(TipoArray tipoArray) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object visit(TipoCaracter tipoCaracter) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object visit(TipoEntero tipoEntero) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object visit(TipoFuncion tipoFuncion) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object visit(TipoReal tipoReal) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object visit(TipoRegistro tipoRegistro) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Object visit(TipoVoid tipoVoid) {
		// TODO Auto-generated method stub
		return null;
	}
}